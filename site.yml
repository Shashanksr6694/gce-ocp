---
- name: Compute Engine Instance Examples
  hosts: localhost
  tasks:
    #section for setting up network
    - name: create the ocp network
      gce_net:
        project_id: "{{ project_id }}"
        credentials_file: "{{ credentials_file }}"
        service_account_email: "{{ service_account_email }}"
        name: "{{ cluster_network_name }}"
        mode: custom
        subnet_name: "{{ cluster_subnetwork_name }}"
        subnet_region: "{{ region }}"
        ipv4_range: "{{ cluster_network_cidr }}"
        state: "present"
    - name: Allow http(s) traffic to the infra nodes
      gce_net:
        project_id: "{{ project_id }}"
        credentials_file: "{{ credentials_file }}"
        name: "{{ cluster_network_name }}"
        fwname: ext-to-infra
        allowed: tcp:80,443
        target_tags: "{{ infra_tag }}"
        state: present
    - name: Allow https traffic to the master nodes
      gce_net:
        project_id: "{{ project_id }}"
        credentials_file: "{{ credentials_file }}"
        name: "{{ cluster_network_name }}"
        fwname: ext-to-master
        allowed: tcp:443
        target_tags: "{{ master_tag }}"
        state: present
    - name: Allow ssh traffic to bastion
      gce_net:
        project_id: "{{ project_id }}"
        credentials_file: "{{ credentials_file }}"
        name: "{{ cluster_network_name }}"
        fwname: ext-to-bastion-ssh-22
        allowed: tcp:22
        target_tags: "{{ bastion_tag }}" 
        state: present
    - name: Allow ssh traffic from bastion to hosts
      gce_net:
        project_id: "{{ project_id }}"
        credentials_file: "{{ credentials_file }}"
        name: "{{ cluster_network_name }}"
        fwname: bastion-to-nodes-ssh-22
        allowed: tcp:22
        target_tags: "{{ node_tag }}"
        src_tags: "{{ bastion_tag }}"
        state: present
    - name: Allow udp/tcp traffic on port 8053 from nodes to master
      gce_net:
        project_id: "{{ project_id }}"
        credentials_file: "{{ credentials_file }}"
        name: "{{ cluster_network_name }}"
        fwname: node-to-master-traffic
        allowed: udp:8053;tcp:8053
        target_tags: "{{ master_tag }}"
        src_tags: "{{ node_tag }}"
        state: present
    - name: Allow tcp traffic on port 10250 from master to nodes
      gce_net:
        project_id: "{{ project_id }}"
        credentials_file: "{{ credentials_file }}"
        name: "{{ cluster_network_name }}"
        fwname: master-to-node-traffic
        allowed: tcp:10250
        target_tags: "{{ node_tag }}"
        src_tags: "{{ master_tag }}"
        state: present
    - name: Allow tcp traffic on ports 2379 and 2380 from master to master
      gce_net:
        project_id: "{{ project_id }}"
        credentials_file: "{{ credentials_file }}"
        name: "{{ cluster_network_name }}"
        fwname: master-to-master-traffic
        allowed: tcp:2379,2380
        target_tags: "{{ master_tag }}"
        src_tags: "{{ master_tag }}"
        state: present
    - name: Allow tcp traffic on port 443 from any to master
      gce_net:
        project_id: "{{ project_id }}"
        credentials_file: "{{ credentials_file }}"
        name: "{{ cluster_network_name }}"
        fwname: any-to-master-traffic
        allowed: tcp:443
        target_tags: "{{ master_tag }}"
        src_range: "{{ cluster_network_cidr }}"
        state: present
    - name: Allow tcp traffic on ports 9200 and 9300 from infra to infra
      gce_net:
        project_id: "{{ project_id }}"
        credentials_file: "{{ credentials_file }}"
        name: "{{ cluster_network_name }}"
        fwname: infra-to-infra-traffic
        allowed: tcp:9200,9300
        target_tags: "{{ infra_tag }}"
        src_tags: "{{ infra_tag }}"
        state: present
    - name: Allow tcp traffic on port 443 and 80 from any to infra
      gce_net:
        project_id: "{{ project_id }}"
        credentials_file: "{{ credentials_file }}"
        name: "{{ cluster_network_name }}"
        fwname: any-to-infra-traffic
        allowed: tcp:80,443
        target_tags: "{{ infra_tag }}"
        src_range: 0.0.0.0/0
        state: present
    - name: Allow udp traffic on port 4789 from node to node
      gce_net:
        project_id: "{{ project_id }}"
        credentials_file: "{{ credentials_file }}"
        name: "{{ cluster_network_name }}"
        fwname: node-to-node-traffic
        allowed: udp:4789
        target_tags: "{{ node_tag }}"
        src_tags: "{{ node_tag }}"
        state: present
    - name: Allow tcp traffic on port 10250 from infra to node
      gce_net:
        project_id: "{{ project_id }}"
        credentials_file: "{{ credentials_file }}"
        name: "{{ cluster_network_name }}"
        fwname: infra-to-node-traffic
        allowed: udp:10250
        target_tags: "{{ node_tag }}"
        src_tags: "{{ infra_tag }}"
        state: present

    - name: Create bastion host
      gce:
        instance_names: bastion-host
        zone: "{{ zone }}"
        machine_type: n1-standard-1
        image: my-rhel-image
        state: present
        tags:
          - "{{ bastion_tag }}"
        credentials_file: "{{ credentials_file }}"
        project_id: "{{ project_id }}"
        network: "{{ cluster_network_name }}"
        subnetwork: "{{ cluster_subnetwork_name }}"
      register: gce_bastion

    - name: create boot disks
      gcp_compute_disk:
        name: "{{ item }}-boot-disk"
        size_gb: 10
        zone: "{{ zone }}"
        project: "{{ project_id }}"
        source_image: https://www.googleapis.com/compute/v1/projects/gce-ocp-test/global/images/my-rhel-image
        auth_kind: serviceaccount
        service_account_file: "{{ credentials_file }}"
        scopes:
          - https://www.googleapis.com/auth/compute
        state: present
      with_items:
        - "{{ masters }}"
        - "{{ infra_nodes }}"
        - "{{ app_nodes }}"

    - name: create docker disks
      gcp_compute_disk:
        name: "{{ item }}-docker-disk"
        size_gb: 50
        zone: "{{ zone }}"
        project: "{{ project_id }}"
        auth_kind: serviceaccount
        service_account_file: "{{ credentials_file }}"
        scopes:
          - https://www.googleapis.com/auth/compute
        state: present
      with_items:
        - "{{ masters }}"
        - "{{ infra_nodes }}"
        - "{{ app_nodes }}"

    - name: create master instances
      gce:
        instance_names: "{{item}}"
        zone: "{{ zone }}"
        machine_type: n1-standard-8
        image: my-rhel-image
        state: present
        tags:
          - "{{ master_tag }}"
          - "{{ node_tag }}"
        disks:
          - name: "{{ item }}-boot-disk"
            mode: READ_WRITE
          - name: "{{ item }}-docker-disk"
            mode: READ_WRITE
        credentials_file: "{{ credentials_file }}"
        project_id: "{{ project_id }}"
        network: "{{ cluster_network_name }}"
        subnetwork: "{{ cluster_subnetwork_name }}"
      with_items: "{{ masters }}"
      register: gce_master

    - name: create infra instances
      gce:
        instance_names: "{{item}}"
        zone: "{{ zone }}"
        machine_type: n1-standard-8
        image: my-rhel-image
        state: present
        tags:
          - "{{ infra_tag }}"
          - "{{ node_tag }}"
        disks:
          - name: "{{ item }}-boot-disk"
            mode: READ_WRITE
          - name: "{{ item }}-docker-disk"
            mode: READ_WRITE
        credentials_file: "{{ credentials_file }}"
        project_id: "{{ project_id }}"
        network: "{{ cluster_network_name }}"
        subnetwork: "{{ cluster_subnetwork_name }}"
      with_items: "{{ infra_nodes }}"
      register: gce_infra

    - name: create app node instances
      gce:
        instance_names: "{{item}}"
        zone: "{{ zone }}"
        machine_type: n1-standard-8
        image: my-rhel-image
        state: present
        tags:
          - "{{ node_tag }}"
        disks:
          - name: "{{ item }}-boot-disk"
            mode: READ_WRITE
          - name: "{{ item }}-docker-disk"
            mode: READ_WRITE
        credentials_file: "{{ credentials_file }}"
        project_id: "{{ project_id }}"
        network: "{{ cluster_network_name }}"
        subnetwork: "{{ cluster_subnetwork_name }}"
      with_items: "{{ app_nodes }}"
      register: gce_app_node
    - name: Create IP for app LB
      gce_eip:
        credentials_file: "{{ credentials_file }}"
        project_id: "{{ project_id }}"
        service_account_email: "{{ service_account_email }}"
        name: "{{ project_id }}-app-lb-ip"
        region: "{{ region }}"
        state: present
    - name: create list with infra nodes + zone
      set_fact:
        app_nodes_with_zone: "{{ infra_nodes | map('regex_replace', '^(.*)$','{{ zone }}/\\1') | list  }}"
    - name: Create app LB
      gce_lb:
        credentials_file: "{{ credentials_file }}"
        project_id: "{{ project_id }}"
        service_account_email: "{{ service_account_email }}"
        name: "{{ project_id }}-app-lb"
        region: "{{ region }}"
        members: "{{ app_nodes_with_zone }}"
        external_ip: "{{ project_id }}-app-lb-ip"
        port_range: 80-443
#        httphealthcheck_name: "{{ project_id }}-master-lb-healthcheck"
#        httphealthcheck_port: 8443
#        httphealthcheck_path: "/healthz"
#        httphealthcheck_interval: 10
#        httphealthcheck_timeout: 10
#        httphealthcheck_healthy_count: 3
#        httphealthcheck_unhealthy_count: 3
        state: present
    - name: create list with master nodes + zone
      set_fact:
        master_nodes_with_zone: "{{ masters | map('regex_replace', '^(.*)$','{{ zone }}/\\1') | list  }}"
    - name: Create IP for master LB
      gce_eip:
        credentials_file: "{{ credentials_file }}"
        project_id: "{{ project_id }}"
        service_account_email: "{{ service_account_email }}"
        name: "{{ project_id }}-master-lb-ip"
        region: "{{ region }}"
        state: present
    - name: Create master LB
      gce_lb:
        credentials_file: "{{ credentials_file }}"
        project_id: "{{ project_id }}"
        service_account_email: "{{ service_account_email }}"
        name: "{{ project_id }}-master-lb"
        region: "{{ region }}"
        members: "{{ master_nodes_with_zone }}"
        external_ip: "{{ project_id }}-master-lb-ip"
        port_range: 443
#        httphealthcheck_name: "{{ project_id }}-master-lb-healthcheck"
#        httphealthcheck_port: 8443
#        httphealthcheck_path: "/healthz"
#        httphealthcheck_interval: 10
#        httphealthcheck_timeout: 10
#        httphealthcheck_healthy_count: 3
#        httphealthcheck_unhealthy_count: 3
        state: present

    - name: Save host data (master)
      add_host:
        hostname: "{{ item.instance_data[0].public_ip }}"
        groupname: master_ips
      loop: "{{ gce_master.results }}"

    - name: Save host data (infra)
      add_host:
        hostname: "{{ item.instance_data[0].public_ip }}"
        groupname: infra_ips
      loop: "{{ gce_infra.results }}"

    - name: Save host data (app node)
      add_host:
        hostname: "{{ item.instance_data[0].public_ip }}"
        groupname: app_node_ips
      loop: "{{ gce_app_node.results }}"

    - name: Save host data (bastion)
      add_host:
        hostname: "{{ item.public_ip }}"
        groupname: bastion_ips
      with_items: "{{ gce_bastion.instance_data }}"

# This is a mess clean up, look at reference guide ssh -A (couldn't get it to work, try again
- hosts: localhost 
  tasks:
    - gce_net:
        project_id: "{{ project_id }}"
        credentials_file: "{{ credentials_file }}"
        name: "{{ cluster_network_name }}"
        fwname: ext-to-node-ssh-22
        allowed: tcp:22
        target_tags: "{{ node_tag }}"
        state: present
- hosts: master_ips:infra_ips:app_node_ips
  become: no
  tasks:
    - name: Wait for SSH for instances
      wait_for_connection:
    - authorized_key:
        user: "{{ remote_linux_user }}"
        state: present
        key: "{{ lookup('file', '{{ public_key_location }}') }}"
#- hosts: master_ips:infra_ips:app_node_ips
#  become: true
#  roles:
#    - node-prereq
- hosts: localhost
  tasks:
    - gce_net:
        project_id: "{{ project_id }}"
        credentials_file: "{{ credentials_file }}"
        name: "{{ cluster_network_name }}"
        fwname: ext-to-node-ssh-22
        allowed: tcp:22
        target_tags: "{{ node_tag }}"
        state: absent
- hosts: bastion_ips
  become: no
  tasks:
    - name: Copy id_rsa file to bastion for access
      copy:
        src: "{{ private_key_location }}"
        dest: ~/.ssh/id_rsa
        owner: "{{ remote_linux_user }}"
        group: "{{ remote_linux_user }}"
        mode: 0600
    - name: Add host name key to known hosts
      shell: ssh-keyscan -H {{' '.join(masters) + ' ' + ' '.join(infra_nodes) + ' ' + ' '.join(app_nodes) }} >> .ssh/known_hosts
        creates=.ssh/known_hosts
        chdir="/home/{{remote_linux_user}}"
# End of mess

- hosts: bastion_ips
  become: yes
  become_method: sudo
  roles:
    - bastion-prereq
